/**
 * 策略模式定义了一些列的算法，并将每一个算法封装起来，而且使它们还可以相互替换。策略模式让算法独立于使用它的客户而独立变换
 * 旅游出行的方式有很多，有步行，有坐火车，有坐飞机等，如果不用设计模式，那么就是if... else if ... else if... else
 * */

TravelContext travelContext=new TravelContext();
travelContext.setStrategy(new PlaneStrategy());
travelContext.travel();

travelContext.setStrategy(new WalkStrategy());
travelContext.travel();

public class TravelContext {

    private Travel strategy;


    public void setStrategy(Travel strategy) {
        this.strategy = strategy;
    }

    public Travel getStrategy() {
        return strategy;
    }

    public void travel() {
        if (strategy != null) {
            strategy.travel();
        }
    }
}

public interface Travel {
     void travel();
}

public class WalkStrategy implements Travel{
    @Override
    public void travel() {
        System.out.println(WalkStrategy.class.getName() + " 走路方式去旅行");
    }
}

public class PlaneStrategy implements Travel{
    @Override
    public void travel() {
        System.out.println(PlaneStrategy.class.getName() + " 坐飞机方式去旅行");
    }
}
